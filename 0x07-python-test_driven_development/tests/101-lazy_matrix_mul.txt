# 101-lazy_matrix_mul.txt

============================================================
This file describes the functionalities of 101-lazy_matrix_mul.py
============================================================

# How to print a string using lazy_matrix_mul(m_a, m_b)

It returns a new matrix showing the product of m_a and m_b

>>> matrix_mul = __import__('100-matrix_mul').matrix_mul

>>> m_a = [
...     [1, 2],
...     [3, 4],
... ]
>>> m_b = m_a
>>> print(matrix_mul(m_a, m_b))
[[7, 10], [15, 22]]


>>> m_a = [[1, 2]]
>>> m_b = [
...     [3, 4],
...     [5, 6]
... ]
>>> print(matrix_mul(m_a, m_b))
[[13, 16]]

It works for floats as well

>>> m_a = [
...     [1.2, 5.5, 6.2],
...     [4.66, 12.3, -9.2]
... ]
>>> m_b = [
...     [5.0, 3.3],
...     [-2.9, 4.4],
...     [7.2, 4.4]
... ]
>>> print(matrix_mul(m_a, m_b))
[[34.69, 55.44000000000001], [-78.61, 29.018000000000008]]

It must have 2 positional arguments

>>> print(matrix_mul())
Traceback (most recent call last):
TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'

If two matrices can't be multiplied, it raises a value error

>>> m_a = [
...     [1, 2],
...     [3, 4],
... ]
>>> m_b = [
...     [1, 2],
...     [2, 3],
...     [4, 5]
... ]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
ValueError: shapes (2,2) and (3,2) not aligned: 2 (dim 1) != 3 (dim 0)

The parameters cannot be empty

>>> print(lazy_matrix_mul([[]], [[5, 6], [7, 8]]))
Traceback (most recent call last):
ValueError: shapes (1,0) and (2,2) not aligned: 0 (dim 1) != 2 (dim 0)

>>> print(lazy_matrix_mul([[5, 6], [7, 8]], [[]]))
Traceback (most recent call last):
ValueError: shapes (2,2) and (1,0) not aligned: 2 (dim 1) != 1 (dim 0)

The parameters must be list of lists or a TypeError will be raised

>>> print(matrix_mul([[1, 2]], "also not a list"))
Traceback (most recent call last):
ValueError: Scalar operands are not allowed, use '*' instead

>>> print(matrix_mul("not a list", [[1, 2]]))
Traceback (most recent call last):
ValueError: Scalar operands are not allowed, use '*' inrecen

>>> print(matrix_mul([1, 2], [3, 4]))
11

>>> print(matrix_mul([1, 2], [[3, 4]]))
Traceback (most recent call last):
ValueError: shapes (2,) and (1,2) not aligned: 2 (dim 0) != 1 (dim 0)

The list must contain integers or floats

>>> print(matrix_mul([[1, "non-number"]], [[3, 4]]))
Traceback (most recent call last):
ValueError: shapes (1,2) and (1,2) not aligned: 2 (dim 1) != 1 (dim 0)

Rows and columns must be of the same size, within the lists and between the lists.

>>> m_a = [
...     [1, 2],
...     [3, 4, 5]
... ]
>>> m_b = [
...     [1, 2],
...     [3, 4]
... ]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
TypeError: each row of m_a must should be of the same size

>>> m_a = [
...     [1, 2],
...     [3, 4]
... ]
>>> m_b = [
...     [1, 2],
...     [3, 4, 5]
... ]
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
ValueError: setting an array element with a sequence

>>> m_a = [
...     [1, 2],
...     [3, 4, 5]
... ]
>>> m_b = m_a
>>> print(matrix_mul(m_a, m_b))
Traceback (most recent call last):
ValueError: setting an array element with a sequence
